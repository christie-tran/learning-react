{"ast":null,"code":"var _jsxFileName = \"/Users/christietran/learning/react/react-practices-learning/authentication-project/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  token: \"\",\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: token => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initialToken = localStorage.getItem(\"token\");\n  const [token, setToken] = useState(initialToken); // !! converts a value to a boolean\n\n  const userIsLoggedIn = !!token;\n\n  const loginHandler = token => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n  };\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    onLogout: logoutHandler,\n    onLogin: loginHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"s3jk56xWU5XKZXYqw5SfcwTuysU=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useState","AuthContext","token","isLoggedIn","onLogout","onLogin","AuthContextProvider","props","initialToken","localStorage","getItem","setToken","userIsLoggedIn","loginHandler","setItem","logoutHandler","removeItem","contextValue","children"],"sources":["/Users/christietran/learning/react/react-practices-learning/authentication-project/src/store/auth-context.js"],"sourcesContent":["import { createContext, useState } from \"react\";\n\nconst AuthContext = createContext({\n  token: \"\",\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (token) => {}\n});\n\nexport const AuthContextProvider = (props) => {\n  const initialToken = localStorage.getItem(\"token\");\n  const [token, setToken] = useState(initialToken);\n\n  // !! converts a value to a boolean\n  const userIsLoggedIn = !!token;\n\n  const loginHandler = (token) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n  };\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    onLogout: logoutHandler,\n    onLogin: loginHandler\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  )\n};\n\nexport default AuthContext;\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,MAAMC,WAAW,gBAAGF,aAAa,CAAC;EAChCG,KAAK,EAAE,EADyB;EAEhCC,UAAU,EAAE,KAFoB;EAGhCC,QAAQ,EAAE,MAAM,CAAE,CAHc;EAIhCC,OAAO,EAAGH,KAAD,IAAW,CAAE;AAJU,CAAD,CAAjC;AAOA,OAAO,MAAMI,mBAAmB,GAAIC,KAAD,IAAW;EAAA;;EAC5C,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;EACA,MAAM,CAACR,KAAD,EAAQS,QAAR,IAAoBX,QAAQ,CAACQ,YAAD,CAAlC,CAF4C,CAI5C;;EACA,MAAMI,cAAc,GAAG,CAAC,CAACV,KAAzB;;EAEA,MAAMW,YAAY,GAAIX,KAAD,IAAW;IAC9BS,QAAQ,CAACT,KAAD,CAAR;IACAO,YAAY,CAACK,OAAb,CAAqB,OAArB,EAA8BZ,KAA9B;EACD,CAHD;;EAKA,MAAMa,aAAa,GAAG,MAAM;IAC1BJ,QAAQ,CAAC,IAAD,CAAR;IACAF,YAAY,CAACO,UAAb,CAAwB,OAAxB;EACD,CAHD;;EAKA,MAAMC,YAAY,GAAG;IACnBf,KAAK,EAAEA,KADY;IAEnBC,UAAU,EAAES,cAFO;IAGnBR,QAAQ,EAAEW,aAHS;IAInBV,OAAO,EAAEQ;EAJU,CAArB;EAOA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEI,YAA7B;IAAA,UACGV,KAAK,CAACW;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA7BM;;GAAMZ,mB;;KAAAA,mB;AA+Bb,eAAeL,WAAf"},"metadata":{},"sourceType":"module"}