{"ast":null,"code":"var _jsxFileName = \"/Users/christietran/learning/react/react-practices-learning/authentication-project/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value; // Optional: Add validation\n\n    if (isLogin) {// ...\n    } else {\n      const createUser = async (email, password) => {\n        const response = await fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAJduIilKFzG5NrUL880TiqQjYdSDn5u5o', {\n          method: 'POST',\n          body: JSON.stringify({\n            email: email,\n            password: password,\n            returnSecureToken: true\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = await response.json();\n        let errorMessage = 'Authentication failed!';\n\n        if (data && data.error && data.error.message) {\n          errorMessage = error.message;\n        }\n\n        alert(errorMessage);\n\n        if (!response.ok) {// let errorMessage = 'Authentication failed!';\n          // if (data && data.error && data.error.message) {\n          //   errorMessage = error.message;\n          // }\n          // alert(errorMessage);\n        }\n\n        console.log(data); // Log user in\n      };\n\n      createUser(enteredEmail, enteredPassword);\n      emailInputRef.current.value = '';\n      passwordInputRef.current.value = '';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"d5MFzbQ69dYgb5LfYbTwTxIKLCk=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useState","useRef","classes","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","switchAuthModeHandler","prevState","submitHandler","e","preventDefault","enteredEmail","current","value","enteredPassword","createUser","email","password","response","fetch","method","body","JSON","stringify","returnSecureToken","headers","data","json","errorMessage","error","message","alert","ok","console","log","auth","control","actions","toggle"],"sources":["/Users/christietran/learning/react/react-practices-learning/authentication-project/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useState, useRef } from 'react';\n\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const [isLogin, setIsLogin] = useState(true);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // Optional: Add validation\n\n    if (isLogin) {\n      // ...\n    } else {\n      const createUser = async (email, password) => {\n        const response = await fetch(\n          'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAJduIilKFzG5NrUL880TiqQjYdSDn5u5o', {\n          method: 'POST',\n          body: JSON.stringify({\n            email: email,\n            password: password,\n            returnSecureToken: true\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n\n        const data = await response.json();\n\n        let errorMessage = 'Authentication failed!';\n\n        if (data && data.error && data.error.message) {\n          errorMessage = error.message;\n        }\n\n        alert(errorMessage);\n\n        if (!response.ok) {\n          // let errorMessage = 'Authentication failed!';\n\n          // if (data && data.error && data.error.message) {\n          //   errorMessage = error.message;\n          // }\n\n          // alert(errorMessage);\n        }\n\n        console.log(data);\n        // Log user in\n    }\n\n    createUser(enteredEmail, enteredPassword);\n\n    emailInputRef.current.value = '';\n    passwordInputRef.current.value = '';\n  }\n};\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' required ref={passwordInputRef} />\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? 'Login' : 'Create Account'}</button>\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}