{"ast":null,"code":"var _jsxFileName = \"/Users/christietran/learning/react/react-practices-learning/authentication-project/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useContext } from 'react';\nimport classes from './AuthForm.module.css';\nimport AuthContext from '../../store/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const ctxValue = useContext(AuthContext);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value; // Optional: Add validation\n\n    setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAJduIilKFzG5NrUL880TiqQjYdSDn5u5o';\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAJduIilKFzG5NrUL880TiqQjYdSDn5u5o';\n    }\n\n    const createUser = async (email, password) => {\n      try {\n        const response = await fetch(url, {\n          method: 'POST',\n          body: JSON.stringify({\n            email: email,\n            password: password,\n            returnSecureToken: true\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = await response.json();\n\n        if (!response.ok) {\n          setIsLoading(false);\n          throw new Error(data.error.message);\n        }\n\n        setIsLoading(false);\n        ctxValue.onLogin(data.idToken); // Log user in\n      } catch (error) {\n        alert(error.message);\n      }\n    };\n\n    createUser(enteredEmail, enteredPassword);\n    emailInputRef.current.value = '';\n    passwordInputRef.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 26\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending the data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"qfJoLSpQ0rrIsadWCVB78MUL9Z8=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useState","useRef","useContext","classes","AuthContext","AuthForm","ctxValue","emailInputRef","passwordInputRef","isLogin","setIsLogin","isLoading","setIsLoading","switchAuthModeHandler","prevState","submitHandler","e","preventDefault","enteredEmail","current","value","enteredPassword","url","createUser","email","password","response","fetch","method","body","JSON","stringify","returnSecureToken","headers","data","json","ok","Error","error","message","onLogin","idToken","alert","auth","control","actions","toggle"],"sources":["/Users/christietran/learning/react/react-practices-learning/authentication-project/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useState, useRef, useContext } from 'react';\n\nimport classes from './AuthForm.module.css';\n\nimport AuthContext from '../../store/auth-context';\n\nconst AuthForm = () => {\n  const ctxValue = useContext(AuthContext);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // Optional: Add validation\n\n    setIsLoading(true);\n\n    let url;\n\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAJduIilKFzG5NrUL880TiqQjYdSDn5u5o';\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAJduIilKFzG5NrUL880TiqQjYdSDn5u5o';\n    }\n\n    const createUser = async (email, password) => {\n      try {\n        const response = await fetch(url, {\n          method: 'POST',\n          body: JSON.stringify({\n            email: email,\n            password: password,\n            returnSecureToken: true\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n        const data = await response.json();\n\n        if (!response.ok) {\n          setIsLoading(false);\n          throw new Error(data.error.message);\n        }\n\n        setIsLoading(false);\n        ctxValue.onLogin(data.idToken);\n        // Log user in\n      } catch(error) {\n        alert(error.message);\n      }\n    };\n\n  createUser(enteredEmail, enteredPassword);\n\n  emailInputRef.current.value = '';\n  passwordInputRef.current.value = '';\n};\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' required ref={passwordInputRef} />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n          {isLoading && <p>Sending the data</p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}